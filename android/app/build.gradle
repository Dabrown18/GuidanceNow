apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.github.triplet.play" // for Play uploads

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false

def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

def KS_PASSWORD    = System.getenv("KEYSTORE_PASSWORD") ?: (project.hasProperty("MYAPP_UPLOAD_STORE_PASSWORD") ? MYAPP_UPLOAD_STORE_PASSWORD : "")
def KEY_PASSWORD   = System.getenv("KEY_PASSWORD")       ?: (project.hasProperty("MYAPP_UPLOAD_KEY_PASSWORD") ? MYAPP_UPLOAD_KEY_PASSWORD : "")
def KEY_ALIAS_VAL  = System.getenv("KEY_ALIAS")          ?: (project.hasProperty("MYAPP_UPLOAD_KEY_ALIAS")     ? MYAPP_UPLOAD_KEY_ALIAS     : "")

def STORE_FILEPATH = (
    project.hasProperty("MYAPP_UPLOAD_STORE_FILE") &&
    MYAPP_UPLOAD_STORE_FILE != null &&
    MYAPP_UPLOAD_STORE_FILE.toString().trim()
) ? MYAPP_UPLOAD_STORE_FILE : "app-upload.keystore"

def STORE_TYPE = (System.getenv("KEYSTORE_TYPE") ?: "PKCS12").toString().trim()

def EFFECTIVE_KEY_PASSWORD = (STORE_TYPE.equalsIgnoreCase("PKCS12")) ? KS_PASSWORD : KEY_PASSWORD

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.guidancenow"

    defaultConfig {
        applicationId "com.guidancenow"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file(STORE_FILEPATH)
            storePassword KS_PASSWORD
            keyAlias KEY_ALIAS_VAL
            keyPassword EFFECTIVE_KEY_PASSWORD
            storeType STORE_TYPE
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

def PLAY_JSON = System.getenv("PLAY_SERVICE_JSON")
play {
    if (PLAY_JSON && PLAY_JSON.trim()) {
        serviceAccountCredentials.set(file(PLAY_JSON))
    }
    defaultToAppBundles.set(true)
    track.set("internal")
}
